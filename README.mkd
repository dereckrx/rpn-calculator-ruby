Implementation of an *extensible* Reverse Polish Notation (RPN) calculator. From [wikipedia](http://en.wikipedia.org/wiki/Reverse_Polish_notation):

> In reverse Polish notation the operators follow their operands; for instance, to add 3 and 4, one would write "3 4 +" rather than "3 + 4". If there are multiple operations, the operator is given immediately after its second operand; so the expression written "3 − 4 + 5" in conventional notation would be written "3 4 − 5 +" in RPN: first subtract 4 from 3, then add 5 to that. An advantage of RPN is that it obviates the need for parentheses that are required by infix. While "3 − 4 * 5" can also be written "3 − (4 * 5)", that means something quite different from "(3 − 4) * 5". In postfix, the former could be written "3 4 5 * −", which unambiguously means "3 (4 5 *) −" which reduces to "3 20 −"; the latter could be written "3 4 - 5 *" (or 5 3 4 - *, if you wish to keep similar formatting), which unambiguously means "(3 4 -) 5 *".

This calculator is extensible, which means it's easy to add new operations. To add a new operation, simply add a new operation class into 'lib/operations' with the 'call' method and the 'key' constant defined. The operation class will be auto loaded and available for use. 

The code is command-line only, but GUI code can be substituted for the command-line interface. 

An example (using > as a prompt):

	$ rpn_calculator
	> 4 3 +
	7
	> 100 100 + 2 *
	400
	> 